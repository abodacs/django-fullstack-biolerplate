version: "3.6"

services:
  postgres:
    image: postgres:12.4
    ports:
      - 5432:5432
    volumes:
      - online_benevolent_data:/var/lib/postgresql/data:z
      - ./containers_data/db/postgres/backups:/backups:z
      - ./containers_data/db/postgres/logs:/var/log/postgresql:z
    restart: unless-stopped
    env_file: backend/.env
    networks:
      - backend

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - backend

  broker:
    image: "rabbitmq:alpine"
    hostname: rabbitmq
    env_file: backend/.env
    environment: &env
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"

    networks:
      - backend
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"

  redis:
    image: "redis:alpine"
    env_file: backend/.env
    networks:
      - backend

  backend:
    build:
      dockerfile: backend/Dockerfile
      context: .
    image: django-biolerplate-backend
    tty: true
    ports:
      - 8001:8001
      - 3000:3000
    volumes:
      - ./backend:/home/app/web/backend/
    env_file: backend/.env
    depends_on:
      - postgres
      - broker
    networks:
      - backend

  celery:
    build:
      dockerfile: backend/Dockerfile
      context: .
    command: ./start_celery.sh
    env_file: backend/.env
    volumes:
      - ./backend:/home/app/web/backend/
    depends_on:
      - backend
      - postgres
      - broker
      - redis
    networks:
      - backend

  celery-beat:
    build:
      dockerfile: backend/Dockerfile
      context: .
    command: celery -A onlineBenevolent beat -s /home/celery/var/run/celerybeat-schedule -l info
    env_file: backend/.env
    volumes:
      - ./backend:/home/app/web/backend/
    depends_on:
      - redis
    networks:
      - backend

  dashboard:
    build:
      dockerfile: backend/Dockerfile
      context: .
    command: flower -A core --port=5555 --broker=redis://redis:6379/0
    env_file: backend/.env
    ports:
      - 5555:5555
    depends_on:
      - backend
      - redis
      - celery
    networks:
      - backend

networks:
  backend:

volumes:
  online_benevolent_data:
    driver: local
